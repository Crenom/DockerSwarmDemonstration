version: "3"
services:
  getter:
    image: getter
    build:
      context: .
      dockerfile: docker-compose/getter/Dockerfile
    container_name: getter
    deploy:
      mode: replicated
      replicas: 3
    depends_on:
      - postgres
    ports:
      - "5000:5000"
    environment:
      - HOST=postgres
      - PORT=5432
      - DBNAME=postgres
      - USER=postgres
      - PASSWORD=mysecretpassword
    # restart: always
  postgres:
    # https://hub.docker.com/_/postgres
    image: postgres
    container_name: postgres
    environment:
      - POSTGRES_PASSWORD=mysecretpassword
    ports:
      - "5432:5432"
   # volumes:
   #   - postgresv:/var/lib/postgresql/data
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    depends_on:
      - postgres
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "1234:80"
   # volumes:
   #   - pgadminv:/var/lib/pgadmin
  random_generator:
    image: random_generator
    build:
      context: .
      dockerfile: docker-compose/random_generator/Dockerfile
    container_name: random_generator
    depends_on:
      - getter
    environment:
      - GETTER=getter

# docker-compose down && git pull && docker-compose up -d --build

# чтобы не добавлять образы в репозиторий нужно на каждой ноде загрузить
# git clone https://github.com/Crenom/DockerSwarmDemonstration.git && cd DockerSwarmDemonstration && docker-compose up -d --build && docker-compose down

# https://docs.docker.com/engine/swarm/stack-deploy/
# docker stack deploy --compose-file docker-compose.yml stackdemo